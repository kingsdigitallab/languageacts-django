# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2019-01-10 15:00
from __future__ import unicode_literals

import cms.models.streamfield
from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('cms', '0024_recordindexpage'),
    ]

    operations = [
        migrations.CreateModel(
            name='BiblioRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=256, verbose_name=b'Author Name')),
                ('year_from', models.IntegerField(verbose_name=b'Year')),
                ('year_to', models.IntegerField(blank=True, help_text=b'Leave blank if reference spans                                             only a single year.', null=True, verbose_name=b'End Year (if range)')),
                ('link', models.CharField(blank=True, help_text=b'URL to any source information.', max_length=2048, null=True, verbose_name=b'Link to source')),
                ('page_from', models.IntegerField(blank=True, null=True, verbose_name=b'Start Page (if req.)')),
                ('page_to', models.IntegerField(blank=True, null=True, verbose_name=b'End Page (if req.)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name=b'Internal Notes')),
            ],
            options={
                'verbose_name': 'Bibliographic Reference',
                'verbose_name_plural': 'Bibliographic References',
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='LemmaLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Lemma Language',
                'verbose_name_plural': 'Lemma Languages',
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='LemmaPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Lemma Period',
                'verbose_name_plural': 'Lemma Periods',
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='RecordEntry',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('variants', models.CharField(blank=True, max_length=2048, null=True)),
                ('semantic_history', wagtail.core.fields.StreamField([(b'home', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'title', wagtail.core.blocks.CharBlock()), (b'description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), (b'h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'pullquote', wagtail.core.blocks.StructBlock([(b'quote', wagtail.core.blocks.TextBlock('quote title')), (b'attribution', wagtail.core.blocks.CharBlock()), (b'affiliation', wagtail.core.blocks.CharBlock(required=False)), (b'style', cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), (b'image', wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'caption', wagtail.core.blocks.RichTextBlock(required=False)), (b'alignment', cms.models.streamfield.ImageFormatChoiceBlock()), (b'text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), (b'grid', wagtail.core.blocks.StructBlock([(b'image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'link', wagtail.core.blocks.URLBlock(required=False)), (b'text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), (b'document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), (b'link', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'label', wagtail.core.blocks.CharBlock()), (b'style', cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), (b'embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), (b'html', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock()), (b'alignment', cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), (b'd3', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'css', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'js', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), (b'table', wagtail.contrib.table_block.blocks.TableBlock())], blank=True, null=True)),
                ('collocational_history', wagtail.core.fields.StreamField([(b'home', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'title', wagtail.core.blocks.CharBlock()), (b'description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), (b'h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'pullquote', wagtail.core.blocks.StructBlock([(b'quote', wagtail.core.blocks.TextBlock('quote title')), (b'attribution', wagtail.core.blocks.CharBlock()), (b'affiliation', wagtail.core.blocks.CharBlock(required=False)), (b'style', cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), (b'image', wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'caption', wagtail.core.blocks.RichTextBlock(required=False)), (b'alignment', cms.models.streamfield.ImageFormatChoiceBlock()), (b'text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), (b'grid', wagtail.core.blocks.StructBlock([(b'image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'link', wagtail.core.blocks.URLBlock(required=False)), (b'text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), (b'document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), (b'link', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'label', wagtail.core.blocks.CharBlock()), (b'style', cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), (b'embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), (b'html', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock()), (b'alignment', cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), (b'd3', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'css', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'js', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), (b'table', wagtail.contrib.table_block.blocks.TableBlock())], blank=True, null=True)),
                ('hist_freq_x_label', models.CharField(blank=True, max_length=64, null=True, verbose_name='X Axis Label')),
                ('hist_freq_y_label', models.CharField(blank=True, max_length=64, null=True, verbose_name='Y Axis Label')),
                ('hist_freq_data', models.TextField(blank=True, help_text='Format as... key: value,                                          key: value, key: value', null=True, verbose_name='Chart Data')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cms.LemmaLanguage')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cms.LemmaPeriod')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='recordindexpage',
            name='body',
        ),
        migrations.RemoveField(
            model_name='recordpage',
            name='body',
        ),
        migrations.AddField(
            model_name='recordpage',
            name='cultural_transmission',
            field=wagtail.core.fields.StreamField([(b'home', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'title', wagtail.core.blocks.CharBlock()), (b'description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), (b'h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), (b'intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), (b'pullquote', wagtail.core.blocks.StructBlock([(b'quote', wagtail.core.blocks.TextBlock('quote title')), (b'attribution', wagtail.core.blocks.CharBlock()), (b'affiliation', wagtail.core.blocks.CharBlock(required=False)), (b'style', cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), (b'image', wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'caption', wagtail.core.blocks.RichTextBlock(required=False)), (b'alignment', cms.models.streamfield.ImageFormatChoiceBlock()), (b'text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), (b'grid', wagtail.core.blocks.StructBlock([(b'image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock()), (b'link', wagtail.core.blocks.URLBlock(required=False)), (b'text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), (b'document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), (b'link', wagtail.core.blocks.StructBlock([(b'url', wagtail.core.blocks.URLBlock(required=False)), (b'page', wagtail.core.blocks.PageChooserBlock(required=False)), (b'label', wagtail.core.blocks.CharBlock()), (b'style', cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), (b'embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), (b'html', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock()), (b'alignment', cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), (b'd3', wagtail.core.blocks.StructBlock([(b'html', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'css', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'js', wagtail.core.blocks.RawHTMLBlock(required=False)), (b'additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), (b'table', wagtail.contrib.table_block.blocks.TableBlock())], default=''),
            preserve_default=False,
        ),
    ]
